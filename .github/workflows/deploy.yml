name: Build and Deploy Workstream

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Configure Docker for Artifact Registry
      - name: Configure Docker for Artifact Registry
        env:
          GCP_REGION: ${{ secrets.GCP_REGION || 'us-central1' }}
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      # Build and push using Docker to Artifact Registry
      - name: Build and push Docker image
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_REGION: ${{ secrets.GCP_REGION || 'us-central1' }}
        run: |
          # Build from the root directory
          docker build -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/workstream/backend:latest -f packages/backend/Dockerfile .
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/workstream/backend:latest

      - name: Deploy to Cloud Run
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_REGION: ${{ secrets.GCP_REGION || 'us-central1' }}
        run: |
          gcloud run deploy workstream-backend \
            --image ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/workstream/backend:latest \
            --platform managed \
            --region ${{ env.GCP_REGION }} \
            --allow-unauthenticated

      - name: Deploy Frontend to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          channelId: live
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'

      - name: Deploy to Firebase
        run: npx firebase-tools deploy --only hosting --project ${{ secrets.FIREBASE_PROJECT_ID }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
